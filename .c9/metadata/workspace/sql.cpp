{"filter":false,"title":"sql.cpp","tooltip":"/sql.cpp","undoManager":{"mark":33,"position":33,"stack":[[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["// C++ pgroram for connecting to database (and error handling) ","#include<stdio.h> ","#include<SQLAPI.h>\t\t // main SQLAPI++ header ","","int main(int argc, char* argv[]) ","{ ","\t// create connection object to connect to database ","\tSAConnection con; ","\ttry","\t{ ","\t\t// connect to database ","\t\t// in this example, it is Oracle, ","\t\t// but can also be Sybase, Informix, DB2 ","\t\t// SQLServer, InterBase, SQLBase and ODBC ","\t\tcon.Connect (\"test\", // database name ","\t\t\t\t\t\"tester\", // user name ","\t\t\t\t\t\"tester\", // password ","\t\t\t\t\tSA_Oracle_Client); //Oracle Client ","\t\tprintf(\"We are connected!\\n\"); ","","\t\t// Disconnect is optional ","\t\t// autodisconnect will occur in destructor if needed ","\t\tcon.Disconnect(); ","\t\tprintf(\"We are disconnected!\\n\"); ","\t} ","","\tcatch(SAException & x) ","\t{ ","\t\t// SAConnection::Rollback() ","\t\t// can also throw an exception ","\t\t// (if a network error for example), ","\t\t// we will be ready ","\t\ttry","\t\t{ ","\t\t\t// on error rollback changes ","\t\t\tcon.Rollback (); ","\t\t} ","\t\tcatch(SAException &) ","\t\t{ ","\t\t} ","\t\t// print error message ","\t\tprintf(\"%s\\n\", (const char*)x.ErrText()); ","\t} ","\treturn 0; ","} ",""],"id":1}],[{"start":{"row":0,"column":62},"end":{"row":0,"column":63},"action":"remove","lines":[" "],"id":2},{"start":{"row":1,"column":17},"end":{"row":1,"column":18},"action":"remove","lines":[" "]},{"start":{"row":2,"column":44},"end":{"row":2,"column":45},"action":"remove","lines":[" "]},{"start":{"row":4,"column":32},"end":{"row":4,"column":33},"action":"remove","lines":[" "]},{"start":{"row":5,"column":1},"end":{"row":5,"column":2},"action":"remove","lines":[" "]},{"start":{"row":6,"column":51},"end":{"row":6,"column":52},"action":"remove","lines":[" "]},{"start":{"row":7,"column":18},"end":{"row":7,"column":19},"action":"remove","lines":[" "]},{"start":{"row":9,"column":2},"end":{"row":9,"column":3},"action":"remove","lines":[" "]},{"start":{"row":10,"column":24},"end":{"row":10,"column":25},"action":"remove","lines":[" "]},{"start":{"row":11,"column":35},"end":{"row":11,"column":36},"action":"remove","lines":[" "]},{"start":{"row":12,"column":42},"end":{"row":12,"column":43},"action":"remove","lines":[" "]},{"start":{"row":13,"column":43},"end":{"row":13,"column":44},"action":"remove","lines":[" "]},{"start":{"row":14,"column":39},"end":{"row":14,"column":40},"action":"remove","lines":[" "]},{"start":{"row":15,"column":27},"end":{"row":15,"column":28},"action":"remove","lines":[" "]},{"start":{"row":16,"column":26},"end":{"row":16,"column":27},"action":"remove","lines":[" "]},{"start":{"row":17,"column":39},"end":{"row":17,"column":40},"action":"remove","lines":[" "]},{"start":{"row":18,"column":32},"end":{"row":18,"column":33},"action":"remove","lines":[" "]},{"start":{"row":20,"column":27},"end":{"row":20,"column":28},"action":"remove","lines":[" "]},{"start":{"row":21,"column":54},"end":{"row":21,"column":55},"action":"remove","lines":[" "]},{"start":{"row":22,"column":19},"end":{"row":22,"column":20},"action":"remove","lines":[" "]},{"start":{"row":23,"column":35},"end":{"row":23,"column":36},"action":"remove","lines":[" "]},{"start":{"row":24,"column":2},"end":{"row":24,"column":3},"action":"remove","lines":[" "]},{"start":{"row":26,"column":23},"end":{"row":26,"column":24},"action":"remove","lines":[" "]},{"start":{"row":27,"column":2},"end":{"row":27,"column":3},"action":"remove","lines":[" "]},{"start":{"row":28,"column":29},"end":{"row":28,"column":30},"action":"remove","lines":[" "]},{"start":{"row":29,"column":32},"end":{"row":29,"column":33},"action":"remove","lines":[" "]},{"start":{"row":30,"column":38},"end":{"row":30,"column":39},"action":"remove","lines":[" "]},{"start":{"row":31,"column":21},"end":{"row":31,"column":22},"action":"remove","lines":[" "]},{"start":{"row":33,"column":3},"end":{"row":33,"column":4},"action":"remove","lines":[" "]},{"start":{"row":34,"column":31},"end":{"row":34,"column":32},"action":"remove","lines":[" "]},{"start":{"row":35,"column":19},"end":{"row":35,"column":20},"action":"remove","lines":[" "]},{"start":{"row":36,"column":3},"end":{"row":36,"column":4},"action":"remove","lines":[" "]},{"start":{"row":37,"column":22},"end":{"row":37,"column":23},"action":"remove","lines":[" "]},{"start":{"row":38,"column":3},"end":{"row":38,"column":4},"action":"remove","lines":[" "]},{"start":{"row":39,"column":3},"end":{"row":39,"column":4},"action":"remove","lines":[" "]},{"start":{"row":40,"column":24},"end":{"row":40,"column":25},"action":"remove","lines":[" "]},{"start":{"row":41,"column":43},"end":{"row":41,"column":44},"action":"remove","lines":[" "]},{"start":{"row":42,"column":2},"end":{"row":42,"column":3},"action":"remove","lines":[" "]},{"start":{"row":43,"column":10},"end":{"row":43,"column":11},"action":"remove","lines":[" "]},{"start":{"row":44,"column":1},"end":{"row":44,"column":2},"action":"remove","lines":[" "]}],[{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["+"],"id":3}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["+"],"id":4}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"remove","lines":["h"],"id":5}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"remove","lines":["."],"id":6}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"remove","lines":["+"],"id":7}],[{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"remove","lines":["+"],"id":8}],[{"start":{"row":1,"column":9},"end":{"row":1,"column":14},"action":"remove","lines":["stdio"],"id":9},{"start":{"row":1,"column":9},"end":{"row":1,"column":10},"action":"insert","lines":["i"]}],[{"start":{"row":1,"column":10},"end":{"row":1,"column":11},"action":"insert","lines":["o"],"id":10}],[{"start":{"row":1,"column":11},"end":{"row":1,"column":12},"action":"insert","lines":["s"],"id":11}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["r"],"id":12}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"remove","lines":["r"],"id":13}],[{"start":{"row":1,"column":12},"end":{"row":1,"column":13},"action":"insert","lines":["t"],"id":14}],[{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"insert","lines":["e"],"id":15}],[{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"remove","lines":["e"],"id":16}],[{"start":{"row":1,"column":13},"end":{"row":1,"column":14},"action":"insert","lines":["r"],"id":17}],[{"start":{"row":1,"column":14},"end":{"row":1,"column":15},"action":"insert","lines":["e"],"id":18}],[{"start":{"row":1,"column":15},"end":{"row":1,"column":16},"action":"insert","lines":["a"],"id":19}],[{"start":{"row":1,"column":16},"end":{"row":1,"column":17},"action":"insert","lines":["m"],"id":20}],[{"start":{"row":1,"column":18},"end":{"row":1,"column":19},"action":"remove","lines":["h"],"id":21}],[{"start":{"row":1,"column":17},"end":{"row":1,"column":18},"action":"remove","lines":["."],"id":22}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"remove","lines":["// C++ pgroram for connecting to database (and error handling)","#include<iostream>","#include<SQLAPI>\t\t // main SQLAPI++ header","","int main(int argc, char* argv[])","{","\t// create connection object to connect to database","\tSAConnection con;","\ttry","\t{","\t\t// connect to database","\t\t// in this example, it is Oracle,","\t\t// but can also be Sybase, Informix, DB2","\t\t// SQLServer, InterBase, SQLBase and ODBC","\t\tcon.Connect (\"test\", // database name","\t\t\t\t\t\"tester\", // user name","\t\t\t\t\t\"tester\", // password","\t\t\t\t\tSA_Oracle_Client); //Oracle Client","\t\tprintf(\"We are connected!\\n\");","","\t\t// Disconnect is optional","\t\t// autodisconnect will occur in destructor if needed","\t\tcon.Disconnect();","\t\tprintf(\"We are disconnected!\\n\");","\t}","","\tcatch(SAException & x)","\t{","\t\t// SAConnection::Rollback()","\t\t// can also throw an exception","\t\t// (if a network error for example),","\t\t// we will be ready","\t\ttry","\t\t{","\t\t\t// on error rollback changes","\t\t\tcon.Rollback ();","\t\t}","\t\tcatch(SAException &)","\t\t{","\t\t}","\t\t// print error message","\t\tprintf(\"%s\\n\", (const char*)x.ErrText());","\t}","\treturn 0;","}",""],"id":24},{"start":{"row":0,"column":0},"end":{"row":83,"column":1},"action":"insert","lines":["#include \"stdafx.h\"","#include <iostream>","#include <windows.h>","#include <sqltypes.h>","#include <sql.h>","#include <sqlext.h>","","using namespace std;","","void show_error(unsigned int handletype, const SQLHANDLE& handle)","{","\tSQLCHAR sqlstate[1024];","\tSQLCHAR message[1024];","\tif(SQL_SUCCESS == SQLGetDiagRec(handletype, handle, 1, sqlstate, NULL, message, 1024, NULL))","\tcout<<\"Message: \"<<message<<\"\\nSQLSTATE: \"<<sqlstate<<endl;","}","","int main()","{","\tSQLHANDLE sqlenvhandle;    ","\tSQLHANDLE sqlconnectionhandle;","\tSQLHANDLE sqlstatementhandle;","\tSQLRETURN retcode;","","\tdo","\t{","\t\tif(SQL_SUCCESS!=SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &sqlenvhandle))","\t\t\tbreak;","","\t\tif(SQL_SUCCESS!=SQLSetEnvAttr(sqlenvhandle,SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0)) ","\t\t\tbreak;","","\t\tif(SQL_SUCCESS!=SQLAllocHandle(SQL_HANDLE_DBC, sqlenvhandle, &sqlconnectionhandle))","\t\t\tbreak;","","\t\tSQLCHAR retconstring[1024];","\t\tswitch(SQLDriverConnect (sqlconnectionhandle, NULL, ","\t\t\t\t(SQLCHAR*)\"DRIVER={SQL Server};SERVER=localhost, 1433;DATABASE=MyDatabase;UID=sa;PWD=Admin-123;\", ","\t\t\t\tSQL_NTS, retconstring, 1024, NULL,SQL_DRIVER_NOPROMPT))","\t\t{","\t\t\tcase SQL_SUCCESS_WITH_INFO:","\t\t\t\tshow_error(SQL_HANDLE_DBC, sqlconnectionhandle);","\t\t\t\tbreak;","\t\t\tcase SQL_INVALID_HANDLE:","\t\t\tcase SQL_ERROR:","\t\t\t\tshow_error(SQL_HANDLE_DBC, sqlconnectionhandle);","\t\t\t\tretcode = -1;","\t\t\t\tbreak;","\t\t\tdefault:","\t\t\t\tbreak;","\t\t}","","\t\tif(retcode == -1)","\t\t\tbreak;","","\t\tif(SQL_SUCCESS!=SQLAllocHandle(SQL_HANDLE_STMT, sqlconnectionhandle, &sqlstatementhandle))","\t\t\tbreak;","","\t\tif(SQL_SUCCESS!=SQLExecDirect(sqlstatementhandle, (SQLCHAR*)\"select * from testtable\", SQL_NTS))","\t\t{","\t\t\tshow_error(SQL_HANDLE_STMT, sqlstatementhandle);","\t\t\tbreak;","\t\t}","\t\telse","\t\t{","\t\t\tchar name[64];","\t\t\tchar address[64];","\t\t\tint id;","\t\t\twhile(SQLFetch(sqlstatementhandle)==SQL_SUCCESS)","\t\t\t{","\t\t\t\tSQLGetData(sqlstatementhandle, 1, SQL_C_ULONG, &id, 0, NULL);","\t\t\t\tSQLGetData(sqlstatementhandle, 2, SQL_C_CHAR, name, 64, NULL);","\t\t\t\tSQLGetData(sqlstatementhandle, 3, SQL_C_CHAR, address, 64, NULL);","\t\t\t\tcout<<id<<\" \"<<name<<\" \"<<address<<endl;","\t\t\t}","\t\t}","\t}","\twhile(FALSE);","\tSQLFreeHandle(SQL_HANDLE_STMT, sqlstatementhandle );","\tSQLDisconnect(sqlconnectionhandle);","\tSQLFreeHandle(SQL_HANDLE_DBC, sqlconnectionhandle);","\tSQLFreeHandle(SQL_HANDLE_ENV, sqlenvhandle);","","}"]}],[{"start":{"row":19,"column":24},"end":{"row":19,"column":28},"action":"remove","lines":["    "],"id":25},{"start":{"row":29,"column":97},"end":{"row":29,"column":98},"action":"remove","lines":[" "]},{"start":{"row":36,"column":53},"end":{"row":36,"column":54},"action":"remove","lines":[" "]},{"start":{"row":37,"column":101},"end":{"row":37,"column":102},"action":"remove","lines":[" "]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":26}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["/"],"id":27}],[{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["/"],"id":28}],[{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["/"],"id":29}],[{"start":{"row":3,"column":19},"end":{"row":3,"column":20},"action":"remove","lines":["h"],"id":37}],[{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"remove","lines":["."],"id":38}],[{"start":{"row":4,"column":14},"end":{"row":4,"column":15},"action":"remove","lines":["h"],"id":39}],[{"start":{"row":4,"column":13},"end":{"row":4,"column":14},"action":"remove","lines":["."],"id":40}],[{"start":{"row":5,"column":17},"end":{"row":5,"column":18},"action":"remove","lines":["h"],"id":41}],[{"start":{"row":5,"column":16},"end":{"row":5,"column":17},"action":"remove","lines":["."],"id":42}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":16},"end":{"row":5,"column":16},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1550307853401,"hash":"5e08fb506f988de5351dea09e887fa4a72e8504a"}